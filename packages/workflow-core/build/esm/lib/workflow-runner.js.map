{"version":3,"file":"workflow-runner.js","sources":["../../../src/lib/workflow-runner.ts"],"sourcesContent":["import * as jsonLogic from 'json-logic-js';\nimport type { ActionFunction, MachineOptions, StateMachine } from 'xstate';\nimport { createMachine, interpret } from 'xstate';\nimport { HttpError } from './errors';\nimport type {\n  WorkflowEvent,\n  WorkflowEventWithoutState,\n  WorkflowExtensions,\n  WorkflowRunnerArgs,\n} from './types';\nimport { Error } from './types';\n\nexport class WorkflowRunner {\n  #__subscription: Array<(event: WorkflowEvent) => void> = [];\n  #__workflow: StateMachine<any, any, any>;\n  #__currentStateNode: any;\n  #__currentState: string | undefined | symbol | number | any;\n  #__context: any;\n  #__callback: ((event: WorkflowEvent) => void) | null = null;\n  #__extensions: WorkflowExtensions;\n  #__debugMode: boolean;\n\n  public get workflow() {\n    return this.#__workflow;\n  }\n\n  public get state() {\n    return this.#__currentState;\n  }\n\n  constructor(\n    { workflowDefinition, workflowActions, context = {}, state, extensions }: WorkflowRunnerArgs,\n    debugMode = true,\n  ) {\n    this.#__workflow = this.#__extendedWorkflow({\n      workflow: workflowDefinition,\n      workflowActions,\n      extensions,\n    });\n\n    // use initial context or provided context\n    this.#__context = Object.keys(context).length ? context : workflowDefinition.context || {};\n\n    // use initial state or provided state\n    this.#__currentState = state ? state : workflowDefinition.initial;\n\n    // global and state specific extensions\n    this.#__extensions = extensions || { globalPlugins: [], statePlugins: [] };\n    this.#__debugMode = debugMode;\n  }\n\n  #__extendedWorkflow({\n    workflow,\n    workflowActions,\n    extensions = {\n      statePlugins: [],\n      globalPlugins: [],\n    },\n  }: {\n    workflow: any;\n    workflowActions?: WorkflowRunnerArgs['workflowActions'];\n    extensions?: WorkflowExtensions;\n  }) {\n    const extended = workflow;\n    const onEnter = ['ping'];\n    const onExit = ['pong'];\n    const stateActions: Record<string, ActionFunction<any, any>> = {};\n\n    for (const state in extended.states) {\n      extended.states[state].entry = Array.from(\n        new Set([...(workflow.states[state].entry ?? []), ...onEnter]),\n      );\n\n      extended.states[state].exit = Array.from(\n        new Set([...(workflow.states[state].exit ?? []), ...onExit]),\n      );\n    }\n\n    for (const statePlugin of extensions.statePlugins) {\n      for (const stateName of statePlugin.stateNames) {\n        // E.g { state: { entry: [...,plugin.name] } }\n        extended.states[stateName][statePlugin.when] = Array.from(\n          new Set([...extended.states[stateName][statePlugin.when], statePlugin.name]),\n        );\n\n        // workflow-core\n        // { actions: { persist: action } }\n        stateActions[statePlugin.name] = async (context, event) => {\n          this.#__callback?.({\n            type: 'STATE_ACTION_STATUS',\n            state: this.#__currentState,\n            payload: {\n              status: 'PENDING',\n            },\n          });\n\n          try {\n            await statePlugin.action({\n              context,\n              event,\n              currentState: this.#__currentState,\n            });\n          } catch (err) {\n            let type;\n\n            switch (true) {\n              case err instanceof HttpError:\n                type = Error.HTTP_ERROR;\n                break;\n              default:\n                type = Error.ERROR;\n                break;\n            }\n\n            this.#__callback?.({\n              type,\n              state: this.#__currentState,\n              error: err,\n            });\n          } finally {\n            this.#__callback?.({\n              type: 'STATE_ACTION_STATUS',\n              state: this.#__currentState,\n              payload: {\n                status: 'IDLE',\n              },\n            });\n          }\n        };\n      }\n    }\n\n    for (const statePlugin of extensions.statePlugins) {\n      for (const stateName of statePlugin.stateNames) {\n        // E.g { state: { entry: [...,plugin.name] } }\n        extended.states[stateName][statePlugin.when] = Array.from(\n          new Set([...extended.states[stateName][statePlugin.when], statePlugin.name]),\n        );\n\n        // { actions: { persist: action } }\n        stateActions[statePlugin.name] = statePlugin.action;\n      }\n    }\n\n    const actions: MachineOptions<any, any>['actions'] = {\n      ...workflowActions,\n      ...stateActions,\n      ping: (...rest: any[]) => {\n        console.log('Global state entry handler');\n      },\n      pong: (...rest: any[]) => {\n        console.log('Global state exit handler');\n      },\n    };\n\n    const guards: MachineOptions<any, any>['guards'] = {\n      'json-rule': (ctx, { payload }, { cond }) => {\n        const data = { ...ctx, ...payload };\n        return jsonLogic.apply(\n          cond.name, // Rule\n          data, // Data\n        );\n      },\n    };\n\n    return createMachine({ predictableActionArguments: false, ...extended }, { actions, guards });\n  }\n\n  async sendEvent(event: WorkflowEventWithoutState) {\n    const workflow = this.#__workflow.withContext(this.#__context);\n    console.log('Current state:', this.#__currentState);\n\n    const service = interpret(workflow)\n      .start(this.#__currentState)\n      .onTransition(state => {\n        if (state.changed) {\n          console.log('Transitioned into', state.value);\n\n          if (state.configuration?.[0]?.['type'] == 'final') {\n            console.log('Reached final state');\n          }\n\n          if (this.#__callback) {\n            // TODO: clean it up\n            const name = state.configuration?.[0]?.['key'] ?? '';\n\n            this.#__callback({\n              ...event,\n              state: name,\n            });\n          }\n        }\n\n        this.#__currentStateNode = state;\n        this.#__currentState = state.value;\n      });\n\n    // all sends() will be deferred until the workflow is started\n    service.start();\n\n    for (const ext of this.#__extensions.globalPlugins) {\n      if (ext.when == 'pre') {\n        await ext.action({\n          context: service.getSnapshot().context,\n          event,\n          currentState: this.#__currentStateNode,\n        });\n      }\n    }\n    service.send(event);\n    this.#__context = service.getSnapshot().context;\n    if (this.#__debugMode) {\n      console.log('context:', this.#__context);\n    }\n\n    for (const ext of this.#__extensions.globalPlugins) {\n      if (ext.when == 'post') {\n        await ext.action({\n          context: this.#__context,\n          event,\n          currentState: this.#__currentStateNode,\n        });\n      }\n    }\n  }\n\n  subscribe(callback: (event: WorkflowEvent) => void) {\n    this.#__callback = callback;\n    // Not currently in use.\n    this.#__subscription.push(callback);\n  }\n\n  getSnapshot() {\n    const service = interpret(this.#__workflow.withContext(this.#__context));\n    service.start(this.#__currentState);\n    return service.getSnapshot();\n  }\n}\n"],"names":["_subscription","_classPrivateFieldLooseKey","_workflow","_currentStateNode","_currentState","_context","_callback","_extensions","_debugMode","_extendedWorkflow","WorkflowRunner","_ref","debugMode","workflowDefinition","workflowActions","_ref$context","context","state","extensions","Object","defineProperty","value","_extendedWorkflow2","writable","_classPrivateFieldLooseBase","workflow","keys","length","initial","globalPlugins","statePlugins","_proto","prototype","sendEvent","_sendEvent","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","_this","service","_iterator","_step","ext","_iterator2","_step2","_ext","wrap","_callee$","_context3","prev","next","withContext","console","log","interpret","start","onTransition","changed","_state$configuration","_state$configuration$","configuration","_state$configuration$2","_state$configuration2","_state$configuration3","name","_extends","_createForOfIteratorHelperLoose","done","when","action","getSnapshot","currentState","send","stop","_x","apply","arguments","subscribe","callback","push","_createClass","key","get","_ref2","_this2","_ref2$extensions","extended","onEnter","onExit","stateActions","states","_workflow$states$stat","_workflow$states$stat2","entry","Array","from","Set","concat","exit","_loop","statePlugin","_step3","_iterator6","stateNames","_step6","stateName","_ref5","_callee2","_classPrivateFieldLoo","_classPrivateFieldLoo2","_classPrivateFieldLoo3","_classPrivateFieldLoo4","type","_classPrivateFieldLoo5","_classPrivateFieldLoo6","_callee2$","_context4","call","payload","status","t0","t1","HttpError","Error","HTTP_ERROR","abrupt","ERROR","error","finish","_x2","_x3","_iterator3","_iterator4","_step4","_iterator5","_step5","actions","ping","pong","guards","jsonRule","ctx","_ref3","_ref4","cond","data","jsonLogic","createMachine","predictableActionArguments"],"mappings":"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"}